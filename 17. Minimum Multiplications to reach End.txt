//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int minimumMultiplications(vector<int>& arr, int start, int end) {
        vector<int> cost(100000, 1e9);
        queue<pair<int, int>> q;
        cost[start] = 0;
        q.push({0, start});
        while(!q.empty())
        {
            int step = q.front().first;
            int num = q.front().second;
            q.pop();
            if(num == end) return step;
            for(int i = 0; i < arr.size(); i++)
            {
                int dd = (num * (arr[i]%100000)) % 100000;
                if(step + 1 < cost[dd])
                {
                    cost[dd] = step + 1;
                    q.push({cost[dd], dd});
                }
                if(dd == end) return step + 1;
            }
        }
        return -1;
    }
    
};


//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        int start, end;
        cin >> start >> end;
        Solution obj;
        cout << obj.minimumMultiplications(arr, start, end) << endl;
    }
}

// } Driver Code Ends