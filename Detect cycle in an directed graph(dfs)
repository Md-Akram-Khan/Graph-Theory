bool checkcycle(int node, int vis[], int pathvis[], vector<int> adj[])
{
    vis[node] = 1, pathvis[node] = 1;
    for(auto it: adj[node])
    {
        if(!vis[it])
        {
            if(checkcycle(it, vis, pathvis, adj)) return true;
        }
        else if(pathvis[it]) return true;
    }
    pathvis[node] = 0;
    return false;
}
bool isCyclic(int V, vector<int> adj[]) {
    int vis[V] = {0};
    int pathvis[V] = {0};
    for(int i = 0; i < V; i++)
    {
        if(!vis[i])
        {
            if(checkcycle(i, vis, pathvis, adj)) return true;
        }
    }
    return false;
}
/* 
//without using pathvis array//
bool checkcycle(int node, int vis[], vector<int> adj[])
{
    vis[node] = 2;
    for(auto it: adj[node])
    {
        if(!vis[it])
        {
            if(checkcycle(it, vis, adj)) return true;
        }
        else if(vis[it] == 2) return true;
    }
    vis[node]--;
    return false;
}
bool isCyclic(int V, vector<int> adj[]) {
    int vis[V] = {0};
    for(int i = 0; i < V; i++)
    {
        if(!vis[i])
        {
            if(checkcycle(i, vis, adj)) return true;
        }
    }
    return false;
}
*/
